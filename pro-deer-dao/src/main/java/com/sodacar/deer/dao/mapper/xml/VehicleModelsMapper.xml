<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sodacar.deer.dao.mapper.VehicleModelsMapper">
  <resultMap id="BaseResultMap" type="com.sodacar.deer.dao.model.VehicleModels">
    <constructor>
      <arg column="BRAND" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="MODEL" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="MODEL_YEAR" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="CLASS" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="TYPE" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="ENGINE_TYPE" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="FUEL_CONSUMPTION" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="FUEL_NUMBER" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="CAPACITY" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="FUEL_TANK_CAPACITY" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="BATTERY_MILEAGE" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="CREATED_AT" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="ENABLED" javaType="java.lang.Boolean" jdbcType="BIT" />
      <arg column="USAGE_URL" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="SOURCE_FROM" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="SOURCE_ID" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="OPERATION_MODE" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="DATA_FROM" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.sodacar.deer.dao.model.VehicleModelsWithBLOBs">
    <constructor>
      <arg column="BRAND" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="MODEL" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="MODEL_YEAR" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="CLASS" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="TYPE" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="ENGINE_TYPE" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="FUEL_CONSUMPTION" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="FUEL_NUMBER" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="CAPACITY" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="FUEL_TANK_CAPACITY" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="BATTERY_MILEAGE" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="CREATED_AT" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="ENABLED" javaType="java.lang.Boolean" jdbcType="BIT" />
      <arg column="USAGE_URL" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="SOURCE_FROM" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="SOURCE_ID" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="OPERATION_MODE" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="DATA_FROM" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="UUID" javaType="_byte[]" jdbcType="BINARY" />
      <arg column="IMAGES" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
      <arg column="KEY_IMAGES" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    BRAND, MODEL, MODEL_YEAR, CLASS, TYPE, ENGINE_TYPE, FUEL_CONSUMPTION, FUEL_NUMBER, 
    CAPACITY, FUEL_TANK_CAPACITY, BATTERY_MILEAGE, CREATED_AT, ENABLED, USAGE_URL, SOURCE_FROM, 
    SOURCE_ID, OPERATION_MODE, DATA_FROM
  </sql>
  <sql id="Blob_Column_List">
    UUID, IMAGES, KEY_IMAGES
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.sodacar.deer.dao.model.VehicleModelsExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from VEHICLE_MODELS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.sodacar.deer.dao.model.VehicleModelsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from VEHICLE_MODELS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.sodacar.deer.dao.model.VehicleModelsExample">
    delete from VEHICLE_MODELS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sodacar.deer.dao.model.VehicleModelsWithBLOBs">
    insert into VEHICLE_MODELS (BRAND, MODEL, MODEL_YEAR, 
      CLASS, TYPE, ENGINE_TYPE, 
      FUEL_CONSUMPTION, FUEL_NUMBER, CAPACITY, 
      FUEL_TANK_CAPACITY, BATTERY_MILEAGE, CREATED_AT, 
      ENABLED, USAGE_URL, SOURCE_FROM, 
      SOURCE_ID, OPERATION_MODE, DATA_FROM, 
      UUID, IMAGES, KEY_IMAGES
      )
    values (#{brand,jdbcType=VARCHAR}, #{model,jdbcType=VARCHAR}, #{modelYear,jdbcType=VARCHAR}, 
      #{class,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{engineType,jdbcType=VARCHAR}, 
      #{fuelConsumption,jdbcType=DOUBLE}, #{fuelNumber,jdbcType=VARCHAR}, #{capacity,jdbcType=INTEGER}, 
      #{fuelTankCapacity,jdbcType=DOUBLE}, #{batteryMileage,jdbcType=INTEGER}, #{createdAt,jdbcType=TIMESTAMP}, 
      #{enabled,jdbcType=BIT}, #{usageUrl,jdbcType=VARCHAR}, #{sourceFrom,jdbcType=VARCHAR}, 
      #{sourceId,jdbcType=INTEGER}, #{operationMode,jdbcType=VARCHAR}, #{dataFrom,jdbcType=VARCHAR}, 
      #{uuid,jdbcType=BINARY}, #{images,jdbcType=LONGVARCHAR}, #{keyImages,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sodacar.deer.dao.model.VehicleModelsWithBLOBs">
    insert into VEHICLE_MODELS
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="brand != null">
        BRAND,
      </if>
      <if test="model != null">
        MODEL,
      </if>
      <if test="modelYear != null">
        MODEL_YEAR,
      </if>
      <if test="class != null">
        CLASS,
      </if>
      <if test="type != null">
        TYPE,
      </if>
      <if test="engineType != null">
        ENGINE_TYPE,
      </if>
      <if test="fuelConsumption != null">
        FUEL_CONSUMPTION,
      </if>
      <if test="fuelNumber != null">
        FUEL_NUMBER,
      </if>
      <if test="capacity != null">
        CAPACITY,
      </if>
      <if test="fuelTankCapacity != null">
        FUEL_TANK_CAPACITY,
      </if>
      <if test="batteryMileage != null">
        BATTERY_MILEAGE,
      </if>
      <if test="createdAt != null">
        CREATED_AT,
      </if>
      <if test="enabled != null">
        ENABLED,
      </if>
      <if test="usageUrl != null">
        USAGE_URL,
      </if>
      <if test="sourceFrom != null">
        SOURCE_FROM,
      </if>
      <if test="sourceId != null">
        SOURCE_ID,
      </if>
      <if test="operationMode != null">
        OPERATION_MODE,
      </if>
      <if test="dataFrom != null">
        DATA_FROM,
      </if>
      <if test="uuid != null">
        UUID,
      </if>
      <if test="images != null">
        IMAGES,
      </if>
      <if test="keyImages != null">
        KEY_IMAGES,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="brand != null">
        #{brand,jdbcType=VARCHAR},
      </if>
      <if test="model != null">
        #{model,jdbcType=VARCHAR},
      </if>
      <if test="modelYear != null">
        #{modelYear,jdbcType=VARCHAR},
      </if>
      <if test="class != null">
        #{class,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="engineType != null">
        #{engineType,jdbcType=VARCHAR},
      </if>
      <if test="fuelConsumption != null">
        #{fuelConsumption,jdbcType=DOUBLE},
      </if>
      <if test="fuelNumber != null">
        #{fuelNumber,jdbcType=VARCHAR},
      </if>
      <if test="capacity != null">
        #{capacity,jdbcType=INTEGER},
      </if>
      <if test="fuelTankCapacity != null">
        #{fuelTankCapacity,jdbcType=DOUBLE},
      </if>
      <if test="batteryMileage != null">
        #{batteryMileage,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=BIT},
      </if>
      <if test="usageUrl != null">
        #{usageUrl,jdbcType=VARCHAR},
      </if>
      <if test="sourceFrom != null">
        #{sourceFrom,jdbcType=VARCHAR},
      </if>
      <if test="sourceId != null">
        #{sourceId,jdbcType=INTEGER},
      </if>
      <if test="operationMode != null">
        #{operationMode,jdbcType=VARCHAR},
      </if>
      <if test="dataFrom != null">
        #{dataFrom,jdbcType=VARCHAR},
      </if>
      <if test="uuid != null">
        #{uuid,jdbcType=BINARY},
      </if>
      <if test="images != null">
        #{images,jdbcType=LONGVARCHAR},
      </if>
      <if test="keyImages != null">
        #{keyImages,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sodacar.deer.dao.model.VehicleModelsExample" resultType="java.lang.Long">
    select count(*) from VEHICLE_MODELS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update VEHICLE_MODELS
    <set>
      <if test="record.brand != null">
        BRAND = #{record.brand,jdbcType=VARCHAR},
      </if>
      <if test="record.model != null">
        MODEL = #{record.model,jdbcType=VARCHAR},
      </if>
      <if test="record.modelYear != null">
        MODEL_YEAR = #{record.modelYear,jdbcType=VARCHAR},
      </if>
      <if test="record.class != null">
        CLASS = #{record.class,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        TYPE = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.engineType != null">
        ENGINE_TYPE = #{record.engineType,jdbcType=VARCHAR},
      </if>
      <if test="record.fuelConsumption != null">
        FUEL_CONSUMPTION = #{record.fuelConsumption,jdbcType=DOUBLE},
      </if>
      <if test="record.fuelNumber != null">
        FUEL_NUMBER = #{record.fuelNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.capacity != null">
        CAPACITY = #{record.capacity,jdbcType=INTEGER},
      </if>
      <if test="record.fuelTankCapacity != null">
        FUEL_TANK_CAPACITY = #{record.fuelTankCapacity,jdbcType=DOUBLE},
      </if>
      <if test="record.batteryMileage != null">
        BATTERY_MILEAGE = #{record.batteryMileage,jdbcType=INTEGER},
      </if>
      <if test="record.createdAt != null">
        CREATED_AT = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.enabled != null">
        ENABLED = #{record.enabled,jdbcType=BIT},
      </if>
      <if test="record.usageUrl != null">
        USAGE_URL = #{record.usageUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.sourceFrom != null">
        SOURCE_FROM = #{record.sourceFrom,jdbcType=VARCHAR},
      </if>
      <if test="record.sourceId != null">
        SOURCE_ID = #{record.sourceId,jdbcType=INTEGER},
      </if>
      <if test="record.operationMode != null">
        OPERATION_MODE = #{record.operationMode,jdbcType=VARCHAR},
      </if>
      <if test="record.dataFrom != null">
        DATA_FROM = #{record.dataFrom,jdbcType=VARCHAR},
      </if>
      <if test="record.uuid != null">
        UUID = #{record.uuid,jdbcType=BINARY},
      </if>
      <if test="record.images != null">
        IMAGES = #{record.images,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.keyImages != null">
        KEY_IMAGES = #{record.keyImages,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update VEHICLE_MODELS
    set BRAND = #{record.brand,jdbcType=VARCHAR},
      MODEL = #{record.model,jdbcType=VARCHAR},
      MODEL_YEAR = #{record.modelYear,jdbcType=VARCHAR},
      CLASS = #{record.class,jdbcType=VARCHAR},
      TYPE = #{record.type,jdbcType=VARCHAR},
      ENGINE_TYPE = #{record.engineType,jdbcType=VARCHAR},
      FUEL_CONSUMPTION = #{record.fuelConsumption,jdbcType=DOUBLE},
      FUEL_NUMBER = #{record.fuelNumber,jdbcType=VARCHAR},
      CAPACITY = #{record.capacity,jdbcType=INTEGER},
      FUEL_TANK_CAPACITY = #{record.fuelTankCapacity,jdbcType=DOUBLE},
      BATTERY_MILEAGE = #{record.batteryMileage,jdbcType=INTEGER},
      CREATED_AT = #{record.createdAt,jdbcType=TIMESTAMP},
      ENABLED = #{record.enabled,jdbcType=BIT},
      USAGE_URL = #{record.usageUrl,jdbcType=VARCHAR},
      SOURCE_FROM = #{record.sourceFrom,jdbcType=VARCHAR},
      SOURCE_ID = #{record.sourceId,jdbcType=INTEGER},
      OPERATION_MODE = #{record.operationMode,jdbcType=VARCHAR},
      DATA_FROM = #{record.dataFrom,jdbcType=VARCHAR},
      UUID = #{record.uuid,jdbcType=BINARY},
      IMAGES = #{record.images,jdbcType=LONGVARCHAR},
      KEY_IMAGES = #{record.keyImages,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update VEHICLE_MODELS
    set BRAND = #{record.brand,jdbcType=VARCHAR},
      MODEL = #{record.model,jdbcType=VARCHAR},
      MODEL_YEAR = #{record.modelYear,jdbcType=VARCHAR},
      CLASS = #{record.class,jdbcType=VARCHAR},
      TYPE = #{record.type,jdbcType=VARCHAR},
      ENGINE_TYPE = #{record.engineType,jdbcType=VARCHAR},
      FUEL_CONSUMPTION = #{record.fuelConsumption,jdbcType=DOUBLE},
      FUEL_NUMBER = #{record.fuelNumber,jdbcType=VARCHAR},
      CAPACITY = #{record.capacity,jdbcType=INTEGER},
      FUEL_TANK_CAPACITY = #{record.fuelTankCapacity,jdbcType=DOUBLE},
      BATTERY_MILEAGE = #{record.batteryMileage,jdbcType=INTEGER},
      CREATED_AT = #{record.createdAt,jdbcType=TIMESTAMP},
      ENABLED = #{record.enabled,jdbcType=BIT},
      USAGE_URL = #{record.usageUrl,jdbcType=VARCHAR},
      SOURCE_FROM = #{record.sourceFrom,jdbcType=VARCHAR},
      SOURCE_ID = #{record.sourceId,jdbcType=INTEGER},
      OPERATION_MODE = #{record.operationMode,jdbcType=VARCHAR},
      DATA_FROM = #{record.dataFrom,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="com.sodacar.deer.dao.model.VehicleModels">
    <constructor>
      <arg column="NAME" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="BRAND_NAME" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="URL" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="CREATED_AT" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="CREATED_BY_NAME" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="CREATED_BY_TYPE" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="UPDATED_AT" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="UPDATED_BY_NAME" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="UPDATED_BY_TYPE" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.sodacar.deer.dao.model.VehicleModelsWithBLOBs">
    <constructor>
      <arg column="NAME" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="BRAND_NAME" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="URL" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="CREATED_AT" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="CREATED_BY_NAME" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="CREATED_BY_TYPE" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="UPDATED_AT" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="UPDATED_BY_NAME" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="UPDATED_BY_TYPE" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="UUID" javaType="_byte[]" jdbcType="BINARY" />
      <arg column="BID" javaType="_byte[]" jdbcType="BINARY" />
      <arg column="BRAND_ID" javaType="_byte[]" jdbcType="BINARY" />
      <arg column="CREATED_BY_ID" javaType="_byte[]" jdbcType="BINARY" />
      <arg column="UPDATED_BY_ID" javaType="_byte[]" jdbcType="BINARY" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    NAME, BRAND_NAME, URL, CREATED_AT, CREATED_BY_NAME, CREATED_BY_TYPE, UPDATED_AT, 
    UPDATED_BY_NAME, UPDATED_BY_TYPE
  </sql>
  <sql id="Blob_Column_List">
    UUID, BID, BRAND_ID, CREATED_BY_ID, UPDATED_BY_ID
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.sodacar.deer.dao.model.VehicleModelsExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from VEHICLE_MODELS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.sodacar.deer.dao.model.VehicleModelsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from VEHICLE_MODELS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.sodacar.deer.dao.model.VehicleModelsExample">
    delete from VEHICLE_MODELS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sodacar.deer.dao.model.VehicleModelsWithBLOBs">
    insert into VEHICLE_MODELS (NAME, BRAND_NAME, URL, 
      CREATED_AT, CREATED_BY_NAME, CREATED_BY_TYPE, 
      UPDATED_AT, UPDATED_BY_NAME, UPDATED_BY_TYPE, 
      UUID, BID, BRAND_ID, CREATED_BY_ID, 
      UPDATED_BY_ID)
    values (#{name,jdbcType=VARCHAR}, #{brandName,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{createdByName,jdbcType=VARCHAR}, #{createdByType,jdbcType=VARCHAR}, 
      #{updatedAt,jdbcType=TIMESTAMP}, #{updatedByName,jdbcType=VARCHAR}, #{updatedByType,jdbcType=VARCHAR}, 
      #{uuid,jdbcType=BINARY}, #{bid,jdbcType=BINARY}, #{brandId,jdbcType=BINARY}, #{createdById,jdbcType=BINARY}, 
      #{updatedById,jdbcType=BINARY})
  </insert>
  <insert id="insertSelective" parameterType="com.sodacar.deer.dao.model.VehicleModelsWithBLOBs">
    insert into VEHICLE_MODELS
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        NAME,
      </if>
      <if test="brandName != null">
        BRAND_NAME,
      </if>
      <if test="url != null">
        URL,
      </if>
      <if test="createdAt != null">
        CREATED_AT,
      </if>
      <if test="createdByName != null">
        CREATED_BY_NAME,
      </if>
      <if test="createdByType != null">
        CREATED_BY_TYPE,
      </if>
      <if test="updatedAt != null">
        UPDATED_AT,
      </if>
      <if test="updatedByName != null">
        UPDATED_BY_NAME,
      </if>
      <if test="updatedByType != null">
        UPDATED_BY_TYPE,
      </if>
      <if test="uuid != null">
        UUID,
      </if>
      <if test="bid != null">
        BID,
      </if>
      <if test="brandId != null">
        BRAND_ID,
      </if>
      <if test="createdById != null">
        CREATED_BY_ID,
      </if>
      <if test="updatedById != null">
        UPDATED_BY_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="brandName != null">
        #{brandName,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdByName != null">
        #{createdByName,jdbcType=VARCHAR},
      </if>
      <if test="createdByType != null">
        #{createdByType,jdbcType=VARCHAR},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedByName != null">
        #{updatedByName,jdbcType=VARCHAR},
      </if>
      <if test="updatedByType != null">
        #{updatedByType,jdbcType=VARCHAR},
      </if>
      <if test="uuid != null">
        #{uuid,jdbcType=BINARY},
      </if>
      <if test="bid != null">
        #{bid,jdbcType=BINARY},
      </if>
      <if test="brandId != null">
        #{brandId,jdbcType=BINARY},
      </if>
      <if test="createdById != null">
        #{createdById,jdbcType=BINARY},
      </if>
      <if test="updatedById != null">
        #{updatedById,jdbcType=BINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sodacar.deer.dao.model.VehicleModelsExample" resultType="java.lang.Long">
    select count(*) from VEHICLE_MODELS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update VEHICLE_MODELS
    <set>
      <if test="record.name != null">
        NAME = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.brandName != null">
        BRAND_NAME = #{record.brandName,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null">
        URL = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.createdAt != null">
        CREATED_AT = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdByName != null">
        CREATED_BY_NAME = #{record.createdByName,jdbcType=VARCHAR},
      </if>
      <if test="record.createdByType != null">
        CREATED_BY_TYPE = #{record.createdByType,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedAt != null">
        UPDATED_AT = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedByName != null">
        UPDATED_BY_NAME = #{record.updatedByName,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedByType != null">
        UPDATED_BY_TYPE = #{record.updatedByType,jdbcType=VARCHAR},
      </if>
      <if test="record.uuid != null">
        UUID = #{record.uuid,jdbcType=BINARY},
      </if>
      <if test="record.bid != null">
        BID = #{record.bid,jdbcType=BINARY},
      </if>
      <if test="record.brandId != null">
        BRAND_ID = #{record.brandId,jdbcType=BINARY},
      </if>
      <if test="record.createdById != null">
        CREATED_BY_ID = #{record.createdById,jdbcType=BINARY},
      </if>
      <if test="record.updatedById != null">
        UPDATED_BY_ID = #{record.updatedById,jdbcType=BINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update VEHICLE_MODELS
    set NAME = #{record.name,jdbcType=VARCHAR},
      BRAND_NAME = #{record.brandName,jdbcType=VARCHAR},
      URL = #{record.url,jdbcType=VARCHAR},
      CREATED_AT = #{record.createdAt,jdbcType=TIMESTAMP},
      CREATED_BY_NAME = #{record.createdByName,jdbcType=VARCHAR},
      CREATED_BY_TYPE = #{record.createdByType,jdbcType=VARCHAR},
      UPDATED_AT = #{record.updatedAt,jdbcType=TIMESTAMP},
      UPDATED_BY_NAME = #{record.updatedByName,jdbcType=VARCHAR},
      UPDATED_BY_TYPE = #{record.updatedByType,jdbcType=VARCHAR},
      UUID = #{record.uuid,jdbcType=BINARY},
      BID = #{record.bid,jdbcType=BINARY},
      BRAND_ID = #{record.brandId,jdbcType=BINARY},
      CREATED_BY_ID = #{record.createdById,jdbcType=BINARY},
      UPDATED_BY_ID = #{record.updatedById,jdbcType=BINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update VEHICLE_MODELS
    set NAME = #{record.name,jdbcType=VARCHAR},
      BRAND_NAME = #{record.brandName,jdbcType=VARCHAR},
      URL = #{record.url,jdbcType=VARCHAR},
      CREATED_AT = #{record.createdAt,jdbcType=TIMESTAMP},
      CREATED_BY_NAME = #{record.createdByName,jdbcType=VARCHAR},
      CREATED_BY_TYPE = #{record.createdByType,jdbcType=VARCHAR},
      UPDATED_AT = #{record.updatedAt,jdbcType=TIMESTAMP},
      UPDATED_BY_NAME = #{record.updatedByName,jdbcType=VARCHAR},
      UPDATED_BY_TYPE = #{record.updatedByType,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>